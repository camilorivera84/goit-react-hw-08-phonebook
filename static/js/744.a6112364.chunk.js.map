{"version":3,"file":"static/js/744.a6112364.chunk.js","mappings":"0OAsFA,UAjFoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAwBMC,EAAY,mCAAG,WAAMC,GAAN,4EACnBA,EAAEC,iBAEuB,sBACHC,KAAKP,EAAOQ,QAJf,uBAKjBL,EAAgB,sDALC,iCASbM,EAAa,CAAEX,KAAAA,EAAMY,MAAOV,GAClCW,QAAQC,IAAI,kBAAmBH,GAVZ,oBAaEI,EAAAA,EAAAA,IAAcJ,GAbhB,QAaXK,EAbW,OAcjBH,QAAQC,IAAI,uBAAwBE,GACpCnB,GAASoB,EAAAA,EAAAA,IAAWD,IAfH,kDAiBjBH,QAAQK,MAAM,gCAAd,MAjBiB,QAoBnBjB,EAAQ,IACRE,EAAU,IACVE,EAAgB,IAtBG,0DAAH,sDAyBlB,OACE,kBAAMc,SAAUb,EAAhB,WACE,4BACE,kBAAOc,QAAQ,OAAf,oBACA,kBACEC,KAAK,OACLC,GAAG,OACHC,MAAOvB,EACPwB,SAAU,SAAAjB,GAAC,OAAIN,EAAQM,EAAEkB,OAAOF,MAArB,QAGf,4BACE,kBAAOH,QAAQ,SAAf,4BACA,kBACEC,KAAK,OACLC,GAAG,SACHC,MAAOrB,EACPsB,SA/CmB,SAAAjB,GACzB,IAAMmB,EAlBkB,SAAAH,GAExB,IAAMI,EAAcJ,EAAMK,QAAQ,SAAU,IAG5C,OAAID,EAAYE,QAAU,EACjBF,EACEA,EAAYE,QAAU,EACzB,GAAN,OAAUF,EAAYG,MAAM,EAAG,GAA/B,YAAqCH,EAAYG,MAAM,IAEjD,GAAN,OAAUH,EAAYG,MAAM,EAAG,GAA/B,YAAqCH,EAAYG,MAC/C,EACA,GAFF,YAGKH,EAAYG,MAAM,EAAG,IAE7B,CAGyBC,CAAkBxB,EAAEkB,OAAOF,OACnDpB,EAAUuB,EACX,QA+CG,0BACE,mBAAQL,KAAK,SAAb,2BAEDjB,IAAgB,uBAAIA,MAG1B,C","sources":["components/ContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from './ContactsSlice';\nimport { addContact as addContactAPI } from '../components/ContactsAPI'; // Importa la función addContact de contactsAPI\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const formatPhoneNumber = value => {\n    // Eliminar guiones y espacios en blanco existentes\n    const phoneNumber = value.replace(/[-\\s]/g, '');\n\n    // Aplicar el formato xxx-xxx-xxxx\n    if (phoneNumber.length <= 3) {\n      return phoneNumber;\n    } else if (phoneNumber.length <= 6) {\n      return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\n    } else {\n      return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(\n        3,\n        6\n      )}-${phoneNumber.slice(6, 10)}`;\n    }\n  };\n\n  const handleNumberChange = e => {\n    const formattedNumber = formatPhoneNumber(e.target.value);\n    setNumber(formattedNumber);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const phoneNumberRegex = /^\\d{3}-\\d{3}-\\d{4}$/;\n    if (!phoneNumberRegex.test(number.trim())) {\n      setErrorMessage('El número debe estar en el formato xxx-xxx-xxxx');\n      return;\n    }\n\n    const newContact = { name, phone: number };\n    console.log('Nuevo contacto:', newContact);\n    try {\n      // Llama a la función addContact de contactsAPI\n      const data = await addContactAPI(newContact);\n      console.log('Respuesta de la API:', data);\n      dispatch(addContact(data)); // Dispatch la acción para agregar el contacto en Redux\n    } catch (error) {\n      console.error('Error al agregar el contacto:', error);\n    }\n\n    setName('');\n    setNumber('');\n    setErrorMessage('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">Phone Number:</label>\n        <input\n          type=\"text\"\n          id=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Add Contact</button>\n      </div>\n      {errorMessage && <p>{errorMessage}</p>}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","test","trim","newContact","phone","console","log","addContactAPI","data","addContact","error","onSubmit","htmlFor","type","id","value","onChange","target","formattedNumber","phoneNumber","replace","length","slice","formatPhoneNumber"],"sourceRoot":""}